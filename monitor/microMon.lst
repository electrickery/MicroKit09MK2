                      * OPT   PAGE
                      ;       NAM MICROMON09
                      ;       TTL SCRUTATION CLAVIER & AFFICHEURS
                      * OPT   LLEN=120
                      * OPT   S
0000                          SPC 3
                      * REV 1.9
                      *
                      *PROGRAMME MONITEUR POUR MC 6809
                      *
                      *ASSEMBLE SUR EUROMAK LE 20 JUILLET 1982
0000                          SPC 3
                      *****************************************
                      *PROGRAMME REALISE PAR CLAUDE VICIDOMINI*
                      *****************************************
                      *SAISI LE 21 JANVIER 2013 PAR F LE DUIGOU
                      *FIN DE VERIFICATION LE 26 JANVIER 2013
                      *Reformatted for explicit comments and assembly on April 28th, 2021 by F.J. Kraan
                      *with asm6809 (https://www.6809.org.uk/asm6809) to identical binary
                      
                      
0000                          SPC 1
                      *DEFINITION DES FONCTIONS:
                      ***P - PUNCH CHARGE UNE ZONE MEMOIRE EN CASSETTE
                      ***L - LOAD CHARGE LE CONTENU D'UNE CASSETTE EN MEMOIRE
                      ***M - MEMORY EXAMINE ET CHANGE LE CONTENU D'UNE MEMOIRE
                      ***AB- ABORT MET SOUS CONTROLE MONITEUR SANS INITIALISATION
                      ***R - REGISTER DISPLAY
                      *      ORDRE DE VISUALISATION des REGISTRES:CC,A,B,DP,X,Y,U,PC,SP
                      *      LE CONTENU DES REGISTRES PEUT ETRE CHANGE A LA DEMANDE
                      ***I - INCREMENT
                      *      INCREMENTE D'UN PAS LORS D'UNE FONCTION MEMOIRE
                      *      VISUALISE UN REGISTRE APRES L'AUTRE LORS D'UNE INTERRUPTION.
                      *      STOCKE EN MEMOIRE LA DONNEE RENTREE
                      ***G - GO DEMARRE UN PROGRAMME APRES AVOIR PRECISE SON ADRESSE
                      *      PERMET D'EFFECTUER UN CALCUL D'OFFSET POUR UN ADRESSAGE
                      *      INDEXE OU POUR UN BRANCHEMENT RELATIF
                      ***CN- CONTINUE PERMET DE CONTINUER LE DEROULEMENT D'UN PROGRAMME
                      *      APRES UN "ABORT".
                      ***DN- DECREMENTATION: PERMET DE DECREMENTER D'UN PAS LORS D'UNE
                      *      FONCTION MEMOIRE OU DE VISUALISER LES REGISTRES DANS L'AUTRE
                      *      SENS.
                      ***OF- OFFSET: CALCULE L'OFFSET LONG OU COURT LORS D'UNE
                      *      FONCTION MEMOIRE ET LE PLACE AUTOMATIQUEMENT DANS LA
                      *      MEMOIRE DE PROGRAMME, PUIS RETOURNE DANS LA FONCTION
                      *      MEMOIRE.
                      *X-OF- POST OCTET: PERMET DE CALCULER L'OFFSET EN DECIMAL QU'IL FAUT
                      *      DONNER AU POST OCTET; LE PROGRAMME LE CALCULE EN HEXA ET LE
                      *      PLACE EN MEMOIRE.
                      ***BP- BREAKPOINT: INSERE UN SWI2 A UNE ADRESSE SPECIFIEE, VISUALISE
                      *      LE CONTENU DES REGISTRES DU MPU, PUIS PLACE L'INSTRUCTION EN MEM
                      *      A LA PLACE DU SWI2
                      *
                      *
                      *
                      *
                      ********************************************************************
                      **LA PILE EST LOCALISEE A1 PARTIR DE L'ADRESSE $0780 "JUSQU'A $07CC"
                      **LA RAM PART DE L'ADRESSE $0000 JUSQU'A $07AF
                      **LE MONITEUR EST LOCALISE ENTRE $E000 ET $E7FF
                      **LE PIA EST LOCALISE ENTRE $A004 ET $A007
                      ******************************************************************** 
                      ********************************************************************
                      *  LE RESET EST SITUE A L'ADRESSE $E219.
                      *  LA ROUTINE DE NMI EST A L'ADRESSE $E27C.
                      *  LE SWI EST A L'ADRESSE $E2A7.
                      *  LE SWI2 EST A L'ADRESSE $E27C.
                      *  LES AUTRES INTERRUPS SONT DEFINIES DS "EMPLACEMENT DES REGISTRES"
                      ********************************************************************
F800                          ORG $F800
                      *
                      * SCRUTATION DU CLAVIER *
                      *
                      *              0   1   2   3
F800  06050403        KEYTBL  FCB $06,$05,$04,$03
                      *
                      *              4   5   6   7
F804  02011514                FCB $02,$01,$15,$14
                      * 
                      *              8   9   A   B
F808  13121125                FCB $13,$12,$11,$25
                      *
                      *              C   D   E   F
F80C  24232221                FCB $24,$23,$22,$21
F810                          SPC 3
                      * CODAGE DES SEGMENTS *
                      *
                      *              0   1   2   3
F810  7E065B1F        DIGTBL  FCB $7E,$06,$5B,$1F
                      *
                      *              4   5   6   7
F814  273D7D0E                FCB $27,$3D,$7D,$0E
                      *
                      *              8   9   A   B
F818  7F3F6F75                FCB $7F,$3F,$6F,$75
                      *
                      *              C   D   E   F
F81C  78577969                FCB $78,$57,$79,$69
F820                          SPC 3
                      **************  GETKEY ROUTINE  **************
                      *SCRUTE LES LIGNES ET LES COLONNES DU CLAVIER*
                      ************ ALLUME LES AFFICHEURS ***********
F820                          SPC 1
F820  342C            GETKEY  PSHS Y,DP,B
F822                          SETDP $A0
F822  86A0                    LDA #$A0
F824  1F8B                    TFR A,DP
F826  8D53            FINCLA  BSR DISPRE      ; ALLUMER LES AFFICHEURS
F828  4F                      CLRA
F829  9706                    STA <SCNREG     ; ACCES A DDRA
F82B  9707                    STA <SCNCNT     ; ACCES A DDRB
F82D  9704                    STA <DISREG     ; PA EN ENTREE
F82F  860F                    LDA #$0F
F831  9705                    STA <DISCNT     ; PB EN SORTIE
F833  8604                    LDA #$04
F835  9706                    STA <SCNREG     ; ACCES A ORA-DISREG
F837  9707                    STA <SCNCNT     ; ACCES A DRB-DISCNT
F839  C6FF                    LDB #$FF
F83B  5C              LIGSUI  INCB
F83C  C104                    CMPB #$04       ; FIN SCRUT. CLAVIER?
F83E  27E6                    BEQ FINCLA      ; OUI, SCRUTER AFFICHEURS
F840  D705                    STB <DISCNT     ; NON, SCRUTER LIGNE PAR LIGNE
F842  9604                    LDA <DISREG
F844  43                      COMA            ; PAS DE TOUCHE ENFONCEES?
F845  27F4                    BEQ LIGSUI      ; OUI, SCRUTER LIGNE SUIV;
F847  F707F0                  STB SAVCNT     
F84A  B707F1                  STA SAVREG      ; NON, TOUCHE ENFONCEE
F84D  4F                      CLRA
F84E  C601                    LDB #$01
F850  F107F1          COLSUI  CMPB SAVREG     ; TOUCHE DETECTEE?
F853  2706                    BEQ DECKEY      ; OUI, RECONNAITRE LA TOUCHE
F855  4C                      INCA            ; NON, PASSER A LA COLONNE SUIVANTE
F856  58                      ASLB            ; TOUTES COLONNES TESTEES?
F857  27E2                    BEQ LIGSUI      ; OUI, LIGNE SUIVANTE
F859  20F5                    BRA COLSUI      ; NON,COLONNE SUIVANTE
F85B                          SPC 2
                      ************ RECONNAISSANCE DE LA TOUCHE ***********
                      *FABRIQUE LE CODE DE RECONNAISSANCE DE LA TOUCHE SI*
                      ** ELLE EST APPUYEE ; SUPPRIME LES REBONDISSEMENTS**
F85B                          SPC 1
F85B  F607F0          DECKEY  LDB SAVCNT      ; NUMERO DE LIGNE
F85E  58                      ASLB
F85F  58                      ASLB
F860  58                      ASLB
F861  58                      ASLB
F862  3404                    PSHS B  ; REPERE LIGNE
F864  ABE0                    ADDA ,S+
F866  3402                    PSHS A  ; SAUVEGARDE CODE TOUCHE
F868  108E0008                LDY #$0008
F86C  5F              NOREB   CLRB
F86D  9604            DLY2    LDA <DISREG
F86F  43                      COMA REBONDISSEMENT ?
F870  26FA                    BNE NOREB       ; OUI, ATTENDRE DISPARITION
F872  5A                      DECB            ; NON, TEMPO=30MS
F873  26F8                    BNE DLY2
F875  313F                    LEAY -1,Y
F877  26F4                    BNE DLY2
F879  35AE                    PULS PC,Y,DP,B,A        ; RETOUR RESET ROUTINE
F87B                          SPC 2
                      ****** ALLUMAGE DES AFFICHEURS ******
F87B                          SPC 2
F87B  3416            DISPRE  PSHS X,B,A
F87D  8EA004                  LDX #DISREG
F880  4F                      CLRA
F881  A702                    STA 2,X         ; ACCES A DDRA
F883  A703                    STA 3,X         ; ACCES A DDRB
F885  86FF                    LDA #$FF        ; Set all port lines to output
F887  A784                    STA ,X  ; PA EN SORTIE
F889  860F                    LDA #$0F
F88B  A701                    STA 1,X         ; PB0-3 EN SORTIE
F88D  8604                    LDA #$04
F88F  A702                    STA 2,X         ; ACCES A PA-DISREG
F891  A703                    STA 3,X         ; ACCES A PB-DISCNT
F893  8E07FA                  LDX #DISBUF
F896  C603                    LDB #$03
F898  5C              RECOM   INCB
F899  C10A                    CMPB #$0A       ; TOUS LES AFFICHEURS SCRUTES?
F89B  2602                    BNE SCRUTA      ; NON, CONTINUER
F89D  3596                    PULS PC,X,B,A   ; OUI, RETOUR SOUS GETKEY
F89F                          SPC 2
                      ****** ALLUMER UN AFFICHEUR APRES L'AUTRE *******
F89F                          SPC 2
F89F  F7A005          SCRUTA  STB >DISCNT     ; CHOISIR L'AFFICHEUR
F8A2  A680                    LDA ,X+         ; PRENDRE CARACTERE DS DISBUF
F8A4  43                      COMA
F8A5  9704                    STA DISREG      ; ALLUMER SEGMENTS
F8A7  86A0                    LDA #$A0
F8A9  4A              DLY1    DECA
F8AA  26FD                    BNE DLY1        ; DUREE #1MS
                              
                              
F8AC  86FF                    LDA #$FF        ; Clear all segments
F8AE  9704                    STA DISREG      ;  before next display
                              
                              
F8B0  20E6                    BRA RECOM       ; ALLUMER TOUS LES AFFICHEURS
F8B2                          SPC 2
                      *** CHARGEMENT DE L'ADRESSE DANS X ***
F8B2                          SPC 2
F8B2  1E89            FADDRX  EXG A,B
F8B4  1F01                    TFR D,X         ; D=X=ADRESSE PROGRAMME
F8B6  3586                    PULS PC,B,A
F8B8                          SPC 2
                      ****** FABRICATION DES ADRESSES ******
F8B8                          SPC 2
F8B8  3406            BADDR   PSHS B,A
F8BA  4F                      CLRA
F8BB  5F                      CLRB
F8BC  FD07FA                  STD DISBUF
F8BF  FD07FC                  STD DISBUF+2    ; 4 PREMIERS DIGITS=0
F8C2  8E07FA                  LDX #DISBUF     ; POINTER SUR DISBUF
F8C5  8D08                    BSR HEXIN7      ; AFFICHE 2 PREMIERS CHIFFRES
F8C7  3402                    PSHS A
F8C9  8D04                    BSR HEXIN7      ; AFFICHE 3e ET 4e CHIFFRE
F8CB  3504                    PULS B
F8CD  20E3                    BRA FADDRX      ; FABRIQUE ADRESSE
F8CF  8D16            HEXIN7  BSR KEYHEX      ; FABRIQUE VAL TOUCHE
F8D1  48                      ASLA
F8D2  48                      ASLA
F8D3  48                      ASLA
F8D4  48                      ASLA    ; TRANSFERT LSB,MSB
F8D5  3402                    PSHS A  ; SAUVE VAL TOUCHE
F8D7  8D26                    BSR L7SEG       ; FABRIQUE VAL CONVERSION TOUCHE
F8D9  A780                    STA ,X+         ; VAL CONV DANS DISBUF
F8DB  8D0A                    BSR KEYHEX      ; CONTINUER CHIFFRES SUIVANTS
F8DD  ABE0                    ADDA ,S+
F8DF  3402                    PSHS A
F8E1  8D20                    BSR R7SEG
F8E3  A780                    STA ,X+         ; TOUCHE SUIVANTE
F8E5  3582                    PULS PC,A
F8E7                          SPC 2
                      **FABRICATION DE LA VALEUR HEXA DE LA TOUCHE**
F8E7                          SPC 2
F8E7  17FF36          KEYHEX  LBSR GETKEY     ; SCRUTER LIGNES ET COLONNES
F8EA  3414            HEXCON  PSHS X,B        ; ALLUMER CHIFFRE ET G
F8EC  8EF800                  LDX #KEYTBL     ; POINTER SUR LE TABLEAU
F8EF  C6FF                    LDB #$FF        ; DES CHIFFRES
F8F1  5C              SCRUTC  INCB
F8F2  8CF810                  CMPX #DIGTBL    ; VALEUR DIFF CHIFFRE?
F8F5  272A                    BEQ FONCTI      ; OUI, C'EST UNE FONCTION
F8F7  A180                    CMPA ,X+        ; NON, CHIFFRE TROUVE?
F8F9  26F6                    BNE SCRUTC      ; NON, CONTINUER A SCRUTER
F8FB  1F98                    TFR B,A
F8FD  3594                    PULS PC,X,B
F8FF                          SPC 2
                      *** CONVERSION HEXA-7 SEGMENTS ***
                      ********** TOUCHES VALEURS *******
F8FF                          SPC 2
F8FF  47              L7SEG   ASRA
F900  47                      ASRA
F901  47                      ASRA
F902  47                      ASRA    ; VAL TOUCHE DS A, LSB
F903  3410            R7SEG   PSHS X
F905  8EF810                  LDX #DIGTBL     ; POINTER SUR TABLEAU
F908  840F                    ANDA #$0F       ; PREMIERE TOUCHE?
F90A  2705            NDVALH  BEQ VALHEX      ; OUI, VAL HEX DS A
F90C  3001                    LEAX 1,X        ; NON, POINTER SUR VAL SUIVANTE
F90E  4A                      DECA
F90F  20F9                    BRA NDVALH      ; RECOMMENCER SI VAL NON TROUVEE
F911  A684            VALHEX  LDA ,X  ; CONVERSION HEXA-7SEGMENTS
F913  3590                    PULS PC,X       ; DANS A TROUVE
F915                          SPC 2
                      **** CONVERSION DU CODE TOUCHE EN UNE VAL HEXA ****
F915                          SPC 2
F915  3414            CONHEX  PSHS X,B
F917  8EF810                  LDX #DIGTBL
F91A  1F89                    TFR A,B         ; B=DISBUF+4 OU DISBUF+5
F91C  4F                      CLRA
F91D  E180            NONFIN  CMPB ,X+        ; CHERCHE VAL DONNEE
F91F  2707                    BEQ DONEA       ; A=VAL HEXA DONNEE
F921  10270105        FONCTI  LBEQ RPOINT     ; OUI, FONCTION, RETOURNER SCRUTER
F925  4C                      INCA
F926  20F5                    BRA NONFIN
F928  3594            DONEA   PULS PC,X,B
F92A                          SPC 2
                      ****** EXECUTION DE LA FONCTION MEMOIRE ******
F92A                          SPC 2
F92A  4F              EXMEMO  CLRA
F92B                          SETDP $07
F92B  97FE                    STA <DISBUF+4   ; ETEINDRE 5e DIGIT
F92D  866E                    LDA #$6E
F92F  97FF                    STA <DISBUF+5   ; M DANS 6e DIGIT
F931  8D85                    BSR BADDR       ; FABRIQUER ADRESSE DANS X
F933  0FEE            REMEMO  CLR <COMDEC
F935  A684                    LDA ,X  ; METTRE A DANS LE CONTENU
F937  3402                    PSHS A  ; DE LA CASE MEMOIRE
F939  8DC4                    BSR L7SEG       ; FABRIQUER LE CODE A METTRE
F93B  97FE                    STA <DISBUF+4   ; DANS LE 5e DIGIT
F93D  3502                    PULS A
F93F  8DC2                    BSR R7SEG       ; FABRIQUER LE CODE A METTRE
F941  97FF                    STA <DISBUF+5   ; DANS LE 6e DIGIT
F943  17FEDA          ENCDON  LBSR GETKEY     ; ALLUMER LES DIGITS
F946  8136                    CMPA #$36       ; TOUCHE X?
F948  2767                    BEQ EXPOCT      ; OUI, SCRUTER LA TOUCHE OFFSET
F94A  8100                    CMPA #$00       ; INCREMENTE CASE MEMOIRE?
F94C  272F                    BEQ EXINC       ; OUI, EXECUTER LA FONCTION
F94E  8110                    CMPA #$10       ; NON, DECREMENTE CASE MEMOIRE?
F950  2729                    BEQ EXDEC       ; OUI, EXECUTE LA FONCTION
F952  8133                    CMPA #$33       ; TOUCHE OFFSET?
F954  102705AE                LBEQ EXOFST     ; OUI, EXECUTE LA FONCTION
F958  8D90                    BSR HEXCON      ; NON, FABRIQUER CODE HEXA TOUCHE
F95A  D6FF                    LDB <DISBUF+5   ; SHIFTER DISBUF
F95C  D7FE                    STB <DISBUF+4
F95E  8DA3                    BSR R7SEG
F960  97FF                    STA <DISBUF+5
F962  8D02                    BSR INCREM      ; STOCKER DONNEE
F964  20DD                    BRA ENCDON      ; RECOM SI AUTRE DONNEE
F966                          SPC 2
                      ******* EXECUTION DE LA FONCTION INCREMENTATION *******
                      *********** ET DE LA FONCTION DECREMENTATION **********
F966                          SPC 2
F966                          SETDP $07
F966  96FE            INCREM  LDA <DISBUF+4 PLACE DONNEE EN MEM.
F968  8DAB                    BSR CONHEX      ; CONVERTIR VAL CONVERSION
F96A  48                      ASLA
F96B  48                      ASLA
F96C  48                      ASLA
F96D  48                      ASLA            ; VAL HEXA DANS MSB
F96E  3402                    PSHS A
F970  96FF                    LDA <DISBUF+5
F972  8DA1                    BSR CONHEX
F974  ABE0                    ADDA ,S+        ; A=DONNEE DISBUF+4 ET +5
F976  1F89                    TFR A,B
F978  A784                    STA ,X          ; DONNEE DANS CASE X
F97A  39                      RTS
F97B  0AEE            EXDEC   DEC <COMDEC
F97D  8DE7            EXINC   BSR INCREM
F97F  96EE                    LDA <COMDEC     ; INCREMENTE OU DECREMENTE?
F981  2628                    BNE DECRE       ; COMDEC<>0, DECREMENTE
F983  A680                    LDA ,X+         ; PRENDRE DONNEE DS X ET X+1
F985  3404            PREXIN  PSHS B          ; SAUVE AVANT STOCKAGE
F987  A1E0                    CMPA ,S+        ; MEMOIRE ABSENTE OU MEMOIRE MORTE?
F989  1026009D                LBNE RPOINT     ; OUI, ALLUMER PROMPT ET SCRUTER
F98D  1F10                    TFR X,D         ; NON, AFFICHE CASE MEMOIRE
F98F  17FF6D                  LBSR L7SEG      ; SUIVANTE OU PRECEDENTE
F992  97FA                    STA <DISBUF
F994  1F10                    TFR X,D
F996  17FF6A                  LBSR R7SEG
F999  97FB                    STA <DISBUF+1
F99B  1F98                    TFR B,A
F99D  17FF5F                  LBSR L7SEG
F9A0  97FC                    STA <DISBUF+2
F9A2  1F98                    TFR B,A
F9A4  17FF5C                  LBSR R7SEG
F9A7  97FD                    STA <DISBUF+3
F9A9  2088                    BRA REMEMO      ; RECOMMENCER EXECUTION MEMOIRE
F9AB  A684            DECRE   LDA ,X
F9AD  301F                    LEAX -1,X
F9AF  20D4                    BRA PREXIN      ; DECREMENTATION EXECUTEE
F9B1                          SPC 2
F9B1                          SPC 2
                      ****** EXECUTION POST OCTET: DEFINI S'IL EST >0 OU <0 ******
F9B1                          SPC 1
F9B1  8DB3            EXPOCT  BSR INCREM      ; POST OCTET EN MEM
F9B3  97E4                    STA <SAVPOC     ; SAUVE POST OCTET
F9B5  8601                    LDA #$01        ; ALLUME PROMPT
F9B7  3410                    PSHS X
F9B9  1700D7                  LBSR PROMPT
F9BC  17FE61                  LBSR GETKEY
F9BF  8133                    CMPA #$33       ; TOUCHE OFFSET?
F9C1  2703                    BEQ OFFSET
F9C3  16FF6D                  LBRA REMEMO     ; NON, RETOUR FCT MEM
F9C6  96E4            OFFSET  LDA <SAVPOC     ; REPRENDRE POST OCTET
F9C8  3510                    PULS X
F9CA  301F                    LEAX -1,X
F9CC  1F89                    TFR A,B
F9CE  C48E                    ANDB #$8E 
F9D0  C18C                    CMPB #$8C       ; LEA N,PCR?
F9D2  2610                    BNE CALPOT      ; NON, AFFICHE SIGNE
F9D4  1F89                    TFR A,B 
F9D6  C40D                    ANDB #$0D
F9D8  C10C                    CMPB #$0C       ; BRANCH COURT
F9DA  1027053B                LBEQ OFPOCT
F9DE  C10D                    CMPB #$0D       ; BRANCH LONG
F9E0  1027055D                LBEQ EXLBCL 
F9E4  17FE39          CALPOT  LBSR GETKEY
F9E7  1700A1                  LBSR CLRDIS
F9EA  8100                    CMPA #$00       ; TOUCHE INCREM?
F9EC  2709                    BEQ PLUS        ; POSTOCTET>0
F9EE  8110                    CMPA #$10       ; TOUCHE DECREM?
F9F0  270C                    BEQ MOINS       ; POSTOCTET<0
F9F2  3001                    LEAX 1,X
F9F4  16FF3C                  LBRA REMEMO     ; SINON RETOUR MEM
F9F7  866B            PLUS    LDA #$6B
F9F9  97FF                    STA <DISBUF+5   ; AFFICHE PLUS
F9FB  4F                      CLRA
F9FC  2006                    BRA CONTI
F9FE  866E            MOINS   LDA #$6E
FA00  97FF                    STA <DISBUF+5   ; AFFICHE MOINS
FA02  8680                    LDA #$80
FA04  97E3            CONTI   STA <PLUSMS
FA06  1601D5                  LBRA AFIVAL
FA09                          SPC 2
                      ****** PLACE UN POINT D'ARRET EN MEMOIRE ET SAUVE L'INSTRUCTION ******
FA09                          SPC 1
FA09  CC756B          BPOINT  LDD #$756B
FA0C  DDFE                    STD <DISBUF+4   ; ALLUMER BP
FA0E  17FEA7                  LBSR BADDR      ; AFFICHE ADRESSE
FA11  EC84                    LDD ,X
FA13  DDDF                    STD <SASWI2     ; SAUVE INSTRUCTION
FA15  CC103F                  LDD #$103F
FA18  ED84                    STD ,X          ; PLACE POINT D'ARRET
FA1A  200E                    BRA RPOINT      ; RETOUR SCRUT
FA1C                          SPC 2
                      ***********************************************************************
                      ******************** PROGRAMME DE RESET *******************************
                      ****** INITIALISATION ET DECODAGE DES FONCTIONS :M, R,CN,G,BP,L,P *****
                      ***********************************************************************
FA1C                          SPC 2
FA1C  10CE07C0        RESTAR  LDS #PILE       ; INIT PILE
FA20  10FF07F8                STS >SAVPIL     ; ET POINTEUR X
FA24  8EFA75                  LDX #ROUNMI
FA27  BF07DD                  STX >SAVNMI
FA2A  10CE07A0        RPOINT  LDS #PILMON
FA2E                          SETDP $07
FA2E  8607                    LDA #$07        ; INIT DP
FA30  1F8B                    TFR A,DP
FA32  8D57                    BSR CLRDIS      ; DISBUF=0
FA34  8601                    LDA #$01
FA36  97FA                    STA <DISBUF     ; CHARGEMENT PROMPT
FA38  17FDE5                  LBSR GETKEY     ; ALLUME PROMPT
FA3B  8126                    CMPA #$26       ; TOUCHE BP ?
FA3D  27CA                    BEQ BPOINT      ; OUI, PLACER POINT D'ARRET
FA3F  8130                    CMPA #$30       ; TOUCHE REGISTRE?
FA41  102700C4                LBEQ FONREG     ; OUI, EXECUTE FONCTION DE CHGT REG
FA45  8120                    CMPA #$20       ; TOUCHE=MEMORY?
FA47  1027FEDF                LBEQ EXMEMO     ; OUI, EXECUTE ROUTINE
FA4B  8132                    CMPA #$32       ; NON, TOUCHE=CONTINUE?
FA4D  2722                    BEQ EXCN        ; OUI, EXECUTE ROUTINE
FA4F  8134                    CMPA #$34       ; NOU, TOUCHE=LOAD?
FA51  10270385                LBEQ EXLOAD     ; OUI, EXECUTE ROUTINE
FA55  8135                    CMPA #$35       ; NON, TOUCHE=PUNCH?
FA57  102703E7                LBEQ EXPUNC     ; OUI, EXECUTE ROUTINE
FA5B  8131                    CMPA #$31       ; NON, TOUCHE=GO?
FA5D  26CB                    BNE RPOINT      ; NON, RETOUR SCRUTATION
FA5F  867C                    LDA #$7C        ; OUI, CHARGE G DS DERNIER DIGIT
FA61  97FF                    STA <DISBUF+5
FA63  17FE52                  LBSR BADDR      ; FABRIQUE ADRESSE DEPART
FA66  109EF8                  LDY <SAVPIL     ; DU PROGRAMME
FA69  AF2A                    STX 10,Y        ; ADRESSE PROG DANS PC
FA6B  8680                    LDA #$80
FA6D  AAA4                    ORA ,Y          ; POSITIONNER PLAG E=1
FA6F  A7A4                    STA ,Y          ; POUR PRENDRE EN COMPTE
FA71  10DEF8          EXCN    LDS <SAVPIL     ; TOUS LES REGISTRES
FA74  3B                      RTI             ; DEPART PROG UTILISATEUR
FA75                          SPC 2
                      ****** INITIALISATION DE LA FONCTION NMI ******
FA75                          SPC 2
FA75  A66A            ROUNMI  LDA 10,S
FA77  84F0                    ANDA #$F0
FA79  81E0                    CMPA #$E0
FA7B  27AD                    BEQ RPOINT
FA7D  202A                    BRA RSWI
FA7F                          SPC 2
                      ****** INITIALISATION DE LA FONCTION SWI2 ******
FA7F                          SPC 1
FA7F  6A6B            RSWI2   DEC 11,S
FA81  6A6B                    DEC 11,S        ; POINTER PCR SUR INSTRUC.
FA83  FC07DF                  LDD >SASWI2
FA86  EDF80A                  STD [10,S]      ; REMETRE INSTRUCTION EN MEM.
FA89  201E                    BRA RSWI        ; SCRUTER LES REGISTRES
FA8B                          SPC 2
                      ************** REMISE A ZERO DE TOUT DISBUF **************
FA8B                          SPC 2
FA8B  3456            CLRDIS  PSHS U,X,B,A
FA8D  338C0E                  LEAU INTER2,PCR
FA90  3440                    PSHS U
FA92  4F                      CLRA            ; TOUT DISBUF=0
FA93  C606            PROMPT  LDB #$06
FA95  8E07FA                  LDX #DISBUF
FA98  A780            ENCORE  STA ,X+
FA9A  5A                      DECB
FA9B  26FB                    BNE ENCORE
FA9D  39                      RTS
FA9E  35D6            INTER2  PULS PC,U,X,B,A
FAA0                          SPC 2
                      * CODAGE DES REGISTRES DU MPU *
                      *
                      *              C   A   B   D
FAA0  786F7557        REGTBL  FCB $78,$6F,$75,$57
                      *
                      *              X   Y   U   P
FAA4  6737766B                FCB $67,$37,$76,$6B
                      *
                      *             S
FAA8  3D                      FCB $3D
FAA9                          SPC 2
                      *************** SOFTWARE INTERRUPT ROUTINE *****************************
                      ***** PERMET DE VISUALISER LE CONTENU DES REGISTRES DU MPU *************
                      ******* ET DE CHANGER EVENTUELLEMENT LE CONTENU D'UN REGISTRE QCQ ******
                      ************************************************************************
FAA9                          SPC 2
FAA9                          SETDP $07
FAA9  8607            RSWI    LDA #$07
FAAB  1F8B                    TFR A,DP
FAAD  10DFF8                  STS <SAVPIL
FAB0  10CE07A0                LDS #PILMON
FAB4  8DD5                    BSR CLRDIS      ; TOUT DISBUF=00
FAB6  C602                    LDB #$02        ; COMPTEUR REGISTRES
FAB8  9EF8                    LDX <SAVPIL     ; INDEX DE CHARGEMENT DES REGISTRES
FABA  318CE3                  LEAY REGTBL,PCR         ; Y=REGTBL
FABD  338D0035        TOUREG  LEAU >INTER,PCR
FAC1  3440                    PSHS U          ; PC SAUVE EN PILE
FAC3  A6A0                    LDA ,Y+         ; A=VAL REGISTRE
FAC5  97FF                    STA <DISBUF+5   ; REGISTRE DS DERNIER DIGIT
FAC7  108CFAA9                CMPY #RSWI      ; FIN TABLEAU?
FACB  2603                    BNE SUITER      ; NON
FACD  8E07F8                  LDX #SAVPIL     ; OUI, X POINTE SAVPIL
FAD0  108CFAA4        SUITER  CMPY #REGTBL+4  ; 1iere MOITIER TEBLEAU?
FAD4  230E                    BLS AF2DIG      ; OUI, 1iere MOITIER
FAD6  A684                    LDA ,X          ; NON, 2ieme MOITIER
FAD8  17FE24                  LBSR L7SEG      ; AFFICHE CONTENU
FADB  97FA                    STA <DISBUF     ; SUR 4 DIGITS
FADD  A680                    LDA ,X+ 
FADF  17FE21                  LBSR R7SEG
FAE2  97FB                    STA <DISBUF+1
FAE4  A684            AF2DIG  LDA ,X          ; 1iere MOITIER
FAE6  17FE16                  LBSR L7SEG      ; AFFICHE COTENU SUR
FAE9  97FC                    STA <DISBUF+2   ; 2 DIGITS
FAEB  A680                    LDA ,X+ 
FAED  17FE13                  LBSR R7SEG
FAF0  97FD                    STA <DISBUF+3
FAF2  17FD2B                  LBSR GETKEY     ; ALLUMER AFFICHEURS
FAF5  39                      RTS             ; RETOUR A CHANGEMENT DE REG
FAF6  5A              INTER   DECB 
FAF7  2F1E                    BLE SCRUDE      ; DECREMENTE OU INCREMENTE ? 
FAF9  C101                    CMPB #$01       ; 1er REGISTRE =CCR?
FAFB  2714                    BEQ TSTDEC      ; OUI, SCUTER r
FAFD  8100            REGSUI  CMPA #$00       ; REGISTRE SUIVANT?
FAFF  1026FF27                LBNE RPOINT     ; NON, RETOUR PROMPT
FB03  108CFAA9                CMPY #RSWI      ; OUI, FIN TABLEAU?
FB07  26B4                    BNE TOUREG      ; NON, CONTINUER REGISTRES
FB09  8D80            FONREG  BSR CLRDIS
FB0B  8641                    LDA #$41        ; AFFICHER r
FB0D  97FE                    STA <DISBUF+4
FB0F  203F                    BRA EXREGI      ; SCRUTER REGISTRES
FB11  8110            TSTDEC  CMPA #$10
FB13  27F4                    BEQ FONREG
FB15  20E6                    BRA REGSUI 
FB17  8110            SCRUDE  CMPA #$10       ; DECREMENTATION DEMANDEE?
FB19  2702                    BEQ REGPRE      ; OUI, PASSER AU REGISTRE PRECEDENT
FB1B  20E0                    BRA REGSUI      ; NON, PASSER AU REGISTRE SUIVANT
FB1D  313E            REGPRE  LEAY -2,Y       ; REGTBL POINTE VERS REGISTRE PRECEDENT
FB1F  17FF69                  LBSR CLRDIS     ; ETEINDRE AFFICHAGE
FB22  108CFA9F                CMPY #REGTBL-1  ; DEBUT TABLEAU DES REGISTRES?
FB26  27E1                    BEQ FONREG      ; OUI, RETOUR FONCTION REGISTRE
FB28  108CFAA7                CMPY #REGTBL+7  ; POINTE SUR PC?
FB2C  271B                    BEQ REGPC       ; OUI, ALLUMER LE CONTENU
FB2E  10BCFAA3                CMPY REGTBL+3   ; REGISTRES 8 BITS?
FB32  270B                    BEQ RE8BIT
FB34  10BCFAA2                CMPY REGTBL+2
FB38  230A                    BLS REBIT8
FB3A  301C                    LEAX -4,X       ; REGISTRE 16 BITS X,Y,U,P,S
FB3C  16FF7E                  LBRA TOUREG     ; VISUALISER CONTENU
FB3F  301D            RE8BIT  LEAX -3,X       ; REGISTRES 8 BITS D,B,A,C
FB41  16FF79                  LBRA TOUREG     ; VISUALISE CONTENU
FB44  301E            REBIT8  LEAX -2,X       ; REGISTRES 8 BITS B,A,C
FB46  16FF74                  LBRA TOUREG     ; VISUALISER CONTENU
FB49  9EF8            REGPC   LDX <SAVPIL
FB4B  300A                    LEAX 10,X       ; X POINTE SUR PC
FB4D  16FF6D                  LBRA TOUREG
FB50                          SPC 3
                      ****** PERMET DE CHANGER LE CONTENU D'UN REG LORS D'UN NMI ou SWI ******
FB50                          SPC 3
FB50  318DFF4C        EXREGI  LEAY REGTBL,PCR
FB54  9EF8                    LDX <SAVPIL
FB56  17FCC7                  LBSR GETKEY     ; ALLUMER REG
FB59  8130                    CMPA #$30       ; REG DEMANDE?
FB5B  1027FECB                LBEQ RPOINT     ; OUI, CRUTER TOUCHES
FB5F  8106                    CMPA #$06       ; CCR?
FB61  273B                    BEQ R8BREG      ; OUI
FB63  3001                    LEAX 1,X
FB65  3121                    LEAY 1,Y        ; REG SUIVANT
FB67  8105                    CMPA #$05       ; ACCA?
FB69  2733                    BEQ R8BREG      ; OUI
FB6B  3001                    LEAX 1,X
FB6D  3121                    LEAY 1,Y
FB6F  8104                    CMPA #$04       ; ACCB?
FB71  272B                    BEQ R8BREG      ; OUI
FB73  3001                    LEAX 1,X
FB75  3121                    LEAY 1,Y
FB77  8103                    CMPA #$03       ; DPR?
FB79  2723                    BEQ R8BREG      ; OUI
FB7B  3001                    LEAX 1,X
FB7D  3121                    LEAY 1,Y
FB7F  8102                    CMPA #$02       ; REG X?
FB81  2726                    BEQ REG16B      ; OUI
FB83  3002                    LEAX 2,X
FB85  3121                    LEAY 1,Y
FB87  8101                    CMPA #$01       ; REG Y?
FB89  271E                    BEQ REG16B      ; OUI
FB8B  3002                    LEAX 2,X
FB8D  3121                    LEAY 1,Y 
FB8F  8115                    CMPA #$15       ; REG U?
FB91  2716                    BEQ REG16B      ; OUI
FB93  3002                    LEAX 2,X
FB95  3121                    LEAY 1,Y
FB97  8114                    CMPA #$14       ; REG PCR?
FB99  270E                    BEQ REG16B      ; OUI
FB9B  16FE8C                  LBRA RPOINT
FB9E  A6A4            R8BREG  LDA ,Y
FBA0  97FF                    STA <DISBUF+5   ; AFFICHE TYPE DE REG
FBA2  17FF3F                  LBSR AF2DIG     ; AFFICHE LE CONTENU DU REG 8BITS
FBA5  301F                    LEAX -1,X
FBA7  200B                    BRA CHANG8      ; CHANGER LE CONTENU
FBA9  A6A4            REG16B  LDA ,Y
FBAB  97FF                    STA <DISBUF+5   ; AFFICHE TYPE DE REG
FBAD  17FF26                  LBSR SUITER+6   ; AFFICHE LE CONTENU DU REGISTRE 16BITS
FBB0  301E                    LEAX -2,X
FBB2  2015                    BRA CHAN16      ; CHANGER SON CONTENU
FBB4  3430            CHANG8  PSHS Y,X        ; SAUVEGARDE DES POINTEURS
FBB6  8E07FC                  LDX #DISBUF+2
FBB9  108E0002                LDY #$02
FBBD  1700EF                  LBSR CHTDON     ; SOUS PROG DE CHGT DES DONNEES
FBC0  3530                    PULS Y,X
FBC2  96E5                    LDA <PRESEH 
FBC4  A784                    STA ,X          ; NELLE DONNEE EN PILE
FBC6  16FF40                  LBRA FONREG     ; SCRUTER LES REGISTRES
FBC9                          SPC 1
FBC9  3430            CHAN16  PSHS Y,X
FBCB  8E07FA                  LDX #DISBUF
FBCE  108E0006                LDY #$06
FBD2  1700DA                  LBSR CHTDON
FBD5  3530                    PULS Y,X
FBD7  DCE5                    LDD <PRESEH
FBD9  ED84                    STD ,X
FBDB  16FF2B                  LBRA FONREG
FBDE                          SPC 2
                      ****** AFFICHE VAL DU POST OCTET,EFFECTUE LA CONVERSION ******
                      ****** DECIMALE-HEXADECIMALE ET PLACE LE RESLT EN MEMRE ******
FBDE                          SPC 1
FBDE  3001            AFIVAL  LEAX 1,X
FBE0  3410                    PSHS X
FBE2  17FC3B                  LBSR GETKEY
FBE5  8E07FA                  LDX #DISBUF
FBE8  108E0006                LDY #$06
FBEC  1700C0                  LBSR CHTDON
FBEF  17FC2E                  LBSR GETKEY
FBF2  1700C0                  LBSR MSBDON
FBF5  0FE7                    CLR <PRELOW
FBF7  D7E8                    STB <PRELOW+1
FBF9  3510                    PULS X
FBFB  17FC22                  LBSR GETKEY
FBFE  8131                    CMPA #$31
FC00  2703                    BEQ CALCON
FC02  16FD2E                  LBRA REMEMO
FC05  17FE83          CALCON  LBSR CLRDIS
FC08  1700EA                  LBSR DECHEX     ; CONVERSION DEC-HEXA
FC0B  DCE7                    LDD <PRELOW
FC0D  4D                      TSTA            ; A-0?
FC0E  260B                    BNE TESTST      ; NON, VAL 16BITS?
FC10  58                      ASLB
FC11  251B                    BCS TSTSUI      ; VAL 16BITS?
FC13  58                      ASLB
FC14  2552                    BCS INTR08      ; VAL 16BITS?
FC16  58                      ASLB
FC17  254F                    BCS INTR08      ; VAL 8BITS?
FC19  201A                    BRA INTR05      ; VAL 5BITS?
FC1B  8180            TESTST  CMPA #$80       ; A>80?
FC1D  2208                    BHI ERREUR      ; OUI, AFFICHE ERREUR
FC1F  2702                    BEQ COMPAB
FC21  2066                    BRA INTR16      ; NON, VAL 16 BITS
FC23  C100            COMPAB  CMPB #$00
FC25  2762                    BEQ INTR16
FC27  301F            ERREUR  LEAX -1,X
FC29  1F12            EREURE  TFR X,Y
FC2B  160384                  LBRA CLIGNO
FC2E  56              TSTSUI  RORB
FC2F  C180                    CMPB #$80       ; B>80?
FC31  2256                    BHI INTR16      ; OUI, VAL 16BITS
FC33  2033                    BRA INTR08      ; NON, VAL 8BITS
FC35  58              INTR05  ASLB
FC36  2420                    BCC POSITIF
FC38  DCE7                    LDD <PRELOW
FC3A  A684                    LDA ,X          ; POST DS A, VAL DS B
FC3C  C110                    CMPB #$10       ; B>10?
FC3E  2205                    BHI TSTPOC      ; OUI, TESTER POST OCTET
FC40  48                      ASLA
FC41  2407                    BCC POCPOS
FC43  2023                    BRA INTR08
FC45  48              TSTPOC  ASLA
FC46  24E1                    BCC EREURE      ; POST INCORRECT
FC48  201E                    BRA INTR08      ; VAL 8BITS POSSIBLE
FC4A  08E3            POCPOS  ASL <PLUSMS     ; POSITIF?
FC4C  241A                    BCC INTR08      ; VAL 8BITS
FC4E  A684            CHPOST  LDA ,X
FC50  3404                    PSHS B
FC52  ABE0                    ADDA ,S+
FC54  A784                    STA ,X
FC56  2025                    BRA STODON+2
FC58  DCE7            POSITIF LDD <PRELOW
FC5A  A684                    LDA ,X
FC5C  48                      ASLA
FC5D  25CA                    BCS EREURE
FC5F  08E3                    ASL <PLUSMS
FC61  24EB                    BCC CHPOST      ; SI POSITIF , CHARGER
FC63  50                      NEGB
FC64  C41F                    ANDB #$1F
FC66  20E6                    BRA CHPOST      ; SI NEG, CHARGER
FC68  DCE7            INTR08  LDD <PRELOW
FC6A  A680                    LDA ,X+
FC6C  49                      ROLA
FC6D  24B8                    BCC ERREUR      ; SI DIFFERENT 8BITS ERREUR
FC6F  46                      RORA
FC70  840F                    ANDA #$0F
FC72  8108                    CMPA #$08       ; POST OCTET 8BITS
FC74  26B1                    BNE ERREUR
FC76  08E3                    ASL <PLUSMS     ; OUI, POSITIF?
FC78  2409                    BCC STADON      ; OUI STOCKER DONNEE
FC7A  50                      NEGB
FC7B  E784            STODON  STB ,X
FC7D  17034E                  LBSR AFFIAD+2
FC80  16FCB0                  LBRA REMEMO
FC83  C180            STADON  CMPB #$80
FC85  27A0            RCR     BEQ ERREUR
FC87  20F2                    BRA STODON
FC89  A680            INTR16  LDA ,X+
FC8B  49                      ROLA
FC8C  2499                    BCC ERREUR      ; DIFF 16BITS
FC8E  46                      RORA
FC8F  840F                    ANDA #$0F
FC91  8109                    CMPA #$09       ; 16BITS?
FC93  2692                    BNE ERREUR
FC95  DCE7                    LDD <PRELOW
FC97  08E3                    ASL <PLUSMS     ; POSITIF?
FC99  2409                    BCC COMPAR      ; OUI
FC9B  43                      COMA
FC9C  53                      COMB
FC9D  C30001                  ADDD #$01
FCA0  ED84            CHAR16 STD ,X
FCA2  20D9                    BRA STODON+2
FCA4  10838000        COMPAR  CMPD #$8000
FCA8  27DB                    BEQ RCR
FCAA  20F4                    BRA CHAR16
FCAC                          SPC 2 
                      ****** CHANGEMENT DE CONTENU DES REGISTRES PRESERVES EN PILE ******
FCAC                          SPC 2
FCAC  17FB71          CHTCHI  LBSR GETKEY     ; SCRUTER CHIFFRES
FCAF  338D000D        CHTDON  LEAU >INTVAL,PCR
FCB3  3440                    PSHS U
FCB5  17FC32          MSBDON  LBSR HEXCON     ; CONVERTI CHIFFRE EN HEXA
FCB8  1F89                    TFR A,B
FCBA  17FC46                  LBSR R7SEG
FCBD  A780                    STA ,X+         ; ENVOI CHIFFRE SUR AFFICHEUR
FCBF  39                      RTS
FCC0  3404            INTVAL  PSHS B
FCC2  313F                    LEAY -1,Y
FCC4  1F20                    TFR Y,D         ; 1 OU 5 OU 3
FCC6  54                      LSRB 
FCC7  251A                    BCS DEPLAC
FCC9  108C0002        SUITEP  CMPY #$02       ; DISBUF+0
FCCD  270D                    BEQ CAL16       ; REGISTRE 16BITS
FCCF  1F20                    TFR Y,D         ; 0 OU 4
FCD1  54                      LSRB
FCD2  2419                    BCC CALCU8      ; REGISTRE 8BITS
FCD4  108C0000        SUI     CMPY #$00
FCD8  2ED2                    BGT CHTCHI      ; CHIFFRE SUIVANT
FCDA  2706                    BEQ RETOUR
FCDC  3502            CAL16   PULS A
FCDE  ABE0                    ADDA ,S+
FCE0  97E6                    STA <PRESEL
FCE2  39              RETOUR  RTS
FCE3                          SPC 1
FCE3  3502            DEPLAC  PULS A
FCE5  48                      ASLA
FCE6  48                      ASLA
FCE7  48                      ASLA
FCE8  48                      ASLA
FCE9  3402                    PSHS A
FCEB  20DC                    BRA SUITEP
FCED  3502            CALCU8  PULS A
FCEF  ABE0                    ADDA ,S+
FCF1  97E5                    STA <PRESEH
FCF3  20DF                    BRA SUI
FCF5                          SPC 1
                      ****** SOUS-PROG DE CONVERSION DECIMALE-HEXA, RETOUR EN FCT MEM ******
FCF5                          SPC 1
FCF5  3438            DECHEX  PSHS Y,X,DP
FCF7  860A                    LDA #$0A
FCF9  1F8B                    TFR A,DP        ; 10 DS DP
FCFB  8E07E6                  LDX #PRESEL
FCFE  108E0000                LDY #$00
FD02  A684            CALCUL  LDA ,X
FD04  3121                    LEAY 1,Y
FD06  108C0001                CMPY #$01
FD0A  260B                    BNE COMPR2
FD0C  8D66                    BSR LSBDSA      ; LSB DANS ACCA
FD0E  3D              MULPAR  MUL
FD0F  F307E7                  ADDD >PRELOW    ; D+PRELOW DS D
FD12  FD07E7                  STD >PRELOW
FD15  20EB                    BRA CALCUL
FD17  108C0002        COMPR2  CMPY #$02
FD1B  2606                    BNE COMPR3
FD1D  8D6D                    BSR MUL100      ; MUL DES CENTAINES
FD1F  8D62                    BSR MSBLSB
FD21  20EB                    BRA MULPAR
FD23  108C0003        COMPR3  CMPY #$03
FD27  260C                    BNE COMPR4
FD29  8D61                    BSR MUL100      ; MUL DES MILLIERS
FD2B  A684                    LDA ,X
FD2D  8D45                    BSR LSBDSA
FD2F  3D              MULFIN  MUL
FD30  B607E1                  LDA >PRESER
FD33  20D9                    BRA MULPAR
FD35  108C0004        COMPR4 CMPY #$04
FD39  2623                    BNE COMPR5
FD3B  8602                    LDA #$02
FD3D  B707E2                  STA >SAUVER
FD40  8D50            RECMCE  BSR MUP100      ; MUL DES DIZAINES DE MILLIERS
FD42  7A07E2                  DEC >SAUVER
FD45  2705                    BEQ M10000
FD47  F707E1                  STB >PRESER
FD4A  20F4                    BRA RECMCE
FD4C  8D35            M10000  BSR MSBLSB
FD4E  8103            SECPAR  CMPA #$03
FD50  2406                    BHS TESTER
FD52  108E0005                LDY #$05
FD56  20D7                    BRA MULFIN
FD58  2211            TESTER  BHI AFEROR
FD5A  8602                    LDA #$02
FD5C  20D1                    BRA MULFIN
FD5E  108C0005        COMPR5  CMPY #$05
FD62  260E                    BNE FINCAL
FD64  8601                    LDA #$01
FD66  F607E1                  LDB >PRESER
FD69  20E3                    BRA SECPAR
FD6B  3578            AFEROR  PULS DP,X,Y,U
FD6D  1F12                    TFR X,Y
FD6F  160240                  LBRA CLIGNO
FD72  35B8            FINCAL  PULS PC,X,Y,DP
FD74                          SPC 1
FD74  C608            LSBDSA  LDB #$08
FD76  48              DECENC  LSLA
FD77  5A                      DECB
FD78  C104                    CMPB #$04
FD7A  26FA                    BNE DECENC
FD7C  44              DECTJS  LSRA
FD7D  5A                      DECB
FD7E  26FC                    BNE DECTJS
FD80  1FB9                    TFR DP,B
FD82  39                      RTS
FD83                          SPC 1
FD83  A684            MSBLSB  LDA ,X
FD85  44                      LSRA
FD86  44                      LSRA
FD87  44                      LSRA
FD88  44                      LSRA
FD89  301F                    LEAX -1,X
FD8B  39                      RTS
FD8C                          SPC 1
FD8C  338D0008        MUL100 LEAU >INTER3,PCR
FD90  3440                    PSHS U
FD92  1FB9            MUP100 TFR DP,B
FD94  1F98                    TFR B,A
FD96  3D                      MUL
FD97  39                      RTS
FD98  F707E1          INTER3  STB >PRESER
FD9B  39                      RTS
FD9C                          SPC 2
                      ****** RECONNAISSANCE DU BIT DU CARACTERE TRANSMIS ******
                      *
                      *
                      *
FD9C  3406            RECBIT  PSHS B,A
FD9E  C606            NOUDLY  LDB #$06
FDA0  B6A005          SCARRY  LDA DISCNT      ; CHARGER PB7 PIA
FDA3  48                      LSLA            ; PB7=1
FDA4  24FA                    BCC SCARRY      ; NON, ATTENDRE UN 1 DEBUT CARAC.
FDA6  5A              DLY30U  DECB            ; OUI, DELAI # 30MICROSEC
FDA7  26FD                    BNE DLY30U
FDA9  B6A005                  LDA DISCNT      ; CHARGER DE NOUVEAU PB7
FDAC  48                      LSLA            ; 1 TOUJOURS PRESENT?
FDAD  24EF                    BCC NOUDLY      ; NON, NOUVELLE ATTENTE D'UN CARAC.
FDAF  C624                    LDB #$24        ; OUI, DELAI 430MICROSEC MINI
FDB1  5A              CARRY1  DECB
FDB2  B6A005                  LDA DISCNT
FDB5  48                      LSLA            ; TOUJOURS 1?
FDB6  25F9                    BCS CARRY1      ; OUI, DECOMPTER
FDB8  86EF                    LDA #$EF        ; NON, DECOMPTE>720MICROSEC.
FDBA  5D                      TSTB            ; BIT CARAC.=0?
FDBB  2B01                    BMI AFSIGN      ; OUI, AFFICHER SIGNE POUR 0
FDBD  47                      ASRA            ; NON, AFFICHER SIGNE POUR 1
FDBE  B7A004          AFSIGN  STA DISREG
FDC1  5D                      TSTB
FDC2  3586                    PULS PC,B,A
FDC4                          SPC 2
                      ******** POSITIONNEMENT DU BIT DU CARACTERE ********
                      ***** TRANSMIS DANS LE LSB DE L'ACCUMULATEUR B *****
                      *
                      *
                      *
FDC4  3402            BITLSB  PSHS A
FDC6  8DD4            BITCA1  BSR RECBIT      ; RECONNAISSANCE BIT TRANSMIS
FDC8  2AFC                    BPL BITCA1      ; BIT CARAC. = 1
FDCA  8608                    LDA #$08        ; RECONNAISSANCE BIT SUIVANTS
FDCC  8DCE            CONROT  BSR RECBIT      ; BIT CARAC=0 RECON BITS SUIVANTS
FDCE  1CFE                    ANDCC #$FE      ; CARRY=0
FDD0  2B02                    BMI BITCA0      ; BIT CARACTERE = 0 ?
FDD2  1A01                    ORCC #$01       ; NON, METRE CARRY A 1
FDD4  56              BITCA0  RORB            ; OUI, DEPLACER LA CARRY
FDD5  4A                      DECA            ; PAR ROTATIONS SUCCESSIVES
FDD6  26F4                    BNE CONROT      ; CARRY DANS LSB DE ACCB
FDD8  3582                    PULS PC,A
FDDA                          SPC 2
                      ****** CHARGEMENT D'UN PROGRAMMA PROVENANT D'UNE CASSETTE ******
                      ****************************************************************
FDDA                          SPC 2
FDDA  CC0000          EXLOAD  LDD #$0000
FDDD  FDA006                  STD SCNREG      ; ACCES A DDRAB
FDE0  CCFF7F                  LDD #$FF7F
FDE3  FDA004                  STD DISREG      ; PA ET PB EN SORTIE
FDE6  CC0404                  LDD #$0404      ; PB7 EN ENTREE
FDE9  FDA006                  STD SCNREG      ; ACCES DRAB
FDEC  CCFF04                  LDD #$FF04      ; ETEINDRE LES AFFICHEURS
FDEF  FDA004                  STD DISREG      ; ET SELECTIONNER LE 1er DIGIT
FDF2  8DD0            DETECS  BSR BITLSB      ; DETECTE CARACTERE DEBUT CHARGEMENT
FDF4  C153                    CMPB #$53       ; CARACTERE S TRANSMIS ?
FDF6  26FA                    BNE DETECS      ; NON, CONTINUER A CHERCHER CARACTERE
FDF8  8DCA                    BSR BITLSB      ; OUI, CARACTERES SUIVANTS 
FDFA  C131                    CMPB #$31       ; CARACTERE 1 TRANSMIS ?
FDFC  2708                    BEQ CARSUI      ; OUI, CARACTERES SUIVANTS
FDFE  C14A                    CMPB #$4A       ; NON, CARACTERE FIN = J ?
FE00  26F0                    BNE DETECS      ; NON, DETECTER CARACTERE DE FIN
FE02  8669            AFICHA  LDA #$69        ; LDA #$69 OUI, AFFICHER FIN DU CHARGEMENT
FE04  2032                    BRA DISFIN
FE06                          SPC 2
                      ****** MISE EN MEMOIRE, POINTEE PAR X DES CARAC TRANSMIS ******
                      ***************************************************************
FE06                          SPC 2
FE06  8DBC            CARSUI  BSR BITLSB      ; CONVERSION INTERVALE
FE08  D7F0                    STB <SAVCNT
FE0A  96F0                    LDA <SAVCNT
FE0C  8DB6                    BSR BITLSB
FE0E  D7F6                    STB <SAVB1
FE10  3404                    PSHS B
FE12  ABE0                    ADDA ,S+        ; A + B DANS ACCA
FE14  0AF0                    DEC <SAVCNT 
FE16  8DAC                    BSR BITLSB 
FE18  D7F7                    STB <SAVB2
FE1A  3404                    PSHS B
FE1C  ABE0                    ADDA ,S+        ; A + B DANS ACCA
FE1E  9EF6                    LDX <SAVB1      ; X CONTIENT ADRESSE DE CHARGEMENT
FE20  0AF0            SUICHA  DEC <SAVCNT
FE22  270A                    BEQ DERADD      ; DERNIERE ADRESSE ?
FE24  8D9E                    BSR BITLSB      ; NON, CONTINUER A CHARGER
FE26  E780                    STB ,X+         ; ET A METTRE EN MEMOIRE
FE28  3404                    PSHS B
FE2A  ABE0                    ADDA ,S+        ; A + B DANS ACCA
FE2C  20F2                    BRA SUICHA 
FE2E  8D94            DERADD  BSR BITLSB      ; OUI, DERNIERE ADRESSE
FE30  3404                    PSHS B
FE32  ABE0                    ADDA ,S+        ; ERREUR DANS LA TRANSMISSION
FE34  27BC                    BEQ DETECS 
FE36  8678                    LDA #$78        ; OUI, AFFICHER L'ERREUR
FE38  17FC50          DISFIN  LBSR CLRDIS 
FE3B  97FA                    STA <DISBUF
FE3D  17FA3B          BOUFIN  LBSR DISPRE
FE40  20FB                    BRA BOUFIN
FE42                          SPC 2
                      ****** CHARGEMENT D'UN PROGRAMME D'UNE ZONE MEMOIRE ******
                      *******************VERS UN MAGNETOCASSETTE ***************
                      **********************************************************
FE42                          SPC 2
FE42  8E003D          EXPUNC  LDX #$003D 
FE45  9FFE                    STX <DISBUF+4   ; AFFICHER S POUR START
FE47  17FA6E                  LBSR BADDR      ; FABRIQUER ADRESSE DE DEBUT
FE4A  9FF2                    STX <SADDR1     ; SAUVE DEBUT ADRESSE
FE4C  8669                    LDA #$69        ; AFFICHER F POUR FIN
FE4E  97FF                    STA <DISBUF+5
FE50  17FA65                  LBSR BADDR      ; FABRIQUER ADRESSE DE FIN
FE53  9FF4                    STX <SADDR2     ; SAUVE FIN ADRESSE
FE55  4F                      CLRA            ; ACCES A DDRB
FE56  B7A007                  STA SCNCNT
FE59  4A                      DECA            ; PB EN SORTIE
FE5A  B7A005                  STA DISCNT 
FE5D  8604                    LDA #$04        ; ACCES A ORB DU PIA
FE5F  B7A007                  STA SCNCNT
FE62  4F                      CLRA            ; LIGNE No 0 A 0 ET PB6 = 0
FE63  B7A005                  STA DISCNT
FE66  86FF                    LDA #$FF 
FE68  8D71                    BSR DLY5MS      ; FABRICATION D'UNE SERIE
FE6A  8D6F                    BSR DLY5MS      ; DE 10 PERIODES DE 1400 ET 5600HZ
FE6C  8D63            RECYCL  BSR DEBCHA      ; CHARGER CARACTERE DE DEBUT
FE6E  86FF                    LDA #$FF
FE70  D6F3                    LDB <SADDR1+1   ; POIDS FAIBLE ADRESSE DEBUT
FE72  3404                    PSHS B
FE74  A0E0                    SUBA ,S+        ; A + B DANS ACCA
FE76  840F            CODFIN  ANDA #$0F 
FE78  8B03                    ADDA #$03       ; TRANSMISSION D'UN CARACTERE
FE7A  8D5F                    BSR DLY5MS      ; INTERVALE
FE7C  97F1                    STA <SAVREG
FE7E  8E07F2                  LDX #SADDR1     ; DEBUT ADRESSE
FE81  8D56                    BSR TRANSM      ; TRANSMISSION MSB ADRESSE DEBUT
FE83  9BF1                    ADDA <SAVREG
FE85  97F1                    STA <SAVREG
FE87  3001                    LEAX 1,X
FE89  8D4E                    BSR TRANSM      ; TRANSMISSION LSB ADRESSE DEBUT
FE8B  9BF1                    ADDA <SAVREG
FE8D  97F1                    STA <SAVREG
FE8F  9EF2                    LDX <SADDR1     ; X POINTE SUR PROGRAMME A ENREGISTRER
FE91  8D46            TJTRAN  BSR TRANSM      ; TRANSMISSION DES DONNEES
FE93  9BF1                    ADDA <SAVREG
FE95  97F1                    STA <SAVREG 
FE97  9CF4                    CMPX <SADDR2    ; FIN D'ENREGISTREMENT ?
FE99  270A                    BEQ FINENR      ; OUI, TRANSMETTRE FIN
FE9B  3001                    LEAX 1,X        ; NON, DONNEE SUIVANTE A TRANSMETTRE
FE9D  9FF2                    STX <SADDR1     ; SAUVE POINTEUR
FE9F  96F3                    LDA <SADDR1+1
FEA1  850F                    BITA #$0F       ; 16 CARACTERES TRANSMIS ?
FEA3  26EC                    BNE TJTRAN      ; NON, CONTINUER TRANSMISSION
FEA5  96F1            FINENR  LDA <SAVREG     ; OUI, 16 CARACTERES TRANSMIS
FEA7  40                      NEGA
FEA8  8D31                    BSR DLY5MS      ; TRANSMISSION CODE POUR 16CARAC TRANSMIS
FEAA  9CF4                    CMPX <SADDR2    ; FIN PROGRAMME ?
FEAC  2718                    BEQ FINCHA      ; OUI, TRANSMETTRE FIN CHARGEMENT
FEAE  96F2                    LDA <SADDR1     ; NON, MSB DEBUT ADRESSE
FEB0  91F4                    CMPA <SADDR2    ; < MSB FIN ADRESSE ?
FEB2  2BB8                    BMI RECYCL      ; OUI, RECOMMENCER CYCLE
FEB4  D6F3                    LDB <SADDR1+1   ; NON, LSB DEBUT ADRESSE
FEB6  96F5                    LDA <SADDR2+1   ; -LSB FIN ADRESSE <>0 ?
FEB8  84F0                    ANDA #$F0
FEBA  3404                    PSHS B
FEBC  A1E0                    CMPA ,S+        ; COMPARE B A ACCA
FEBE  26AC                    BNE RECYCL      ; OUI, RECOMMENCER UN CYCLE
FEC0  8D0F                    BSR DEBCHA      ; NON, TRANSMETTRE DEBUT CHARGEMENT
FEC2  96F5                    LDA <SADDR2+1   ; DU CODE DE FIN
FEC4  20B0                    BRA CODFIN      ; CHARGEMENT PUIS FIN
FEC6                          SPC 2
                      ****** FABRICATION DU SIGNAL DE FIN DE CHARGEMENT ******
                      *
                      *
FEC6  8653            FINCHA  LDA #$53
FEC8  8D11                    BSR DLY5MS
FECA  864A                    LDA #$4A
FECC  8D0D                    BSR DLY5MS
FECE  16FF31                  LBRA AFICHA     ; AFFICHAGE FIN DE CHARGEMENT
FED1                          SPC 2
                      ****** FABRICATION DU SIGNAL DE DEBUT DE CHARGEMENT ******
                      *
                      *
FED1  8653            DEBCHA  LDA #$53
FED3  8D06                    BSR DLY5MS      ; TRANSMISSION CARACTERE S
FED5  8631                    LDA #$31
FED7  2002                    BRA DLY5MS      ; TRANSMISSION DU CARACTERE 1
FED9                          SPC 2
                      ****** FABRICATION DU SIGNAL SERIALISE ******
                      *********** DE 10 PERIODES PAR DONNEES **********
                      *
                      *
FED9  A684            TRANSM LDA ,X
FEDB  3406            DLY5MS  PSHS B,A
FEDD  C60A                    LDB #$0A
FEDF  D7EF                    STB <SAVRES
FEE1  1CFE                    ANDCC #$FE      ; METTRE CARRY A 0
FEE3  C690            BOUCL3 LDB #$90         ; DELAI = 720MICROSEC
FEE5  2402                    BCC SAUT
FEE7  C624                    LDB #$24        ; DELAI = 180MICROSEC
FEE9  3404            SAUT    PSHS B
FEEB  C640                    LDB #$40
FEED  F7A005                  STB DISCNT      ; PB6=1
FEF0  E6E4                    LDB ,S
FEF2  5A              BOUCL1  DECB            ; DELAY 180 OU 720MICROSEC
FEF3  26FD                    BNE BOUCL1
FEF5  F7A005                  STB DISCNT      ; PB6=0
FEF8  3504                    PULS B
FEFA  5A              BOUCL2  DECB            ; NOUVEAU DELAY DE 180 OU 720MICROSEC
FEFB  26FD                    BNE BOUCL2
FEFD  1A01                    ORCC #$01       ; METTRE CARRY A 1
FEFF  46                      RORA
FF00  0AEF                    DEC <SAVRES
FF02  26DF                    BNE BOUCL3      ; TERMINER DELAY DE 5MS
FF04  3586                    PULS PC,B,A
FF06                          SPC 2
                      ***** EXECUTION DE LA FONCTION OFFSET *****
                      *
                      *
                      *
FF06  17FA5D          EXOFST  LBSR INCREM
FF09  A684                    LDA ,X
FF0B  8116                    CMPA #$16       ; LBRA?
FF0D  2734                    BEQ EXLBIL      ; OUI, BRANCHEMENT LONG INCONDITIONNEL
FF0F  8117                    CMPA #$17       ; LBSR/
FF11  2730                    BEQ EXLBIL      ; OUI, //////////////////////////////
FF13  A682                    LDA ,-X         ; POINTER SUR INSTRUCTION PRECEDENTE
FF15  8110                    CMPA #$10       ; BRANCHEMENT CONDITIONNEL LONG?
FF17  2728                    BEQ EXLBCL      ; OUI
FF19  3003            OFPOCT  LEAX 3,X        ; X CONTIENT ADRESSE DU BRANCHEMENT COURT
FF1B  8D3B                    BSR CALOFS      ; CALCULER OFFSET
FF1D  2972                    BVS RETOU1      ; SI DEPASSEMENT DE CAPACITE, ERREUR
FF1F  95E9                    BITA <NEGPOS
FF21  2704                    BEQ BRANPO      ; TOUT MSB A 0 = BRANCH POS
FF23  2B09                    BMI BRANNE      ; MSBIT=1 BRANCH NEG
FF25  206A                    BRA RETOU1      ; BRANCH SUR 16 BITS
FF27  5D              BRANPO  TSTB
FF28  2767                    BEQ RETOU1      ; BRANCH NUL IMPOSSIBLE 
FF2A  2B65                    BMI RETOU1      ; N=1, ERREUR BRANCH=16BITS
FF2C  200B                    BRA CHARGE      ; N=0, CHARGE OFFSET DS MEM PROG
FF2E  91E9            BRANNE  CMPA <NEGPOS    ; A=FF?
FF30  265F                    BNE RETOU1      ; NON, ERREUR BRANCH SUR 16 BITS
FF32  5D                      TSTB            ; POSITIONNER N
FF33  2A5C                    BPL RETOU1      ; N=0, BRANCH SUR 16BITS
FF35  C1FF                    CMPB #$FF
FF37  2758                    BEQ RETOU1
FF39  E7A2            CHARGE  STB ,-Y         ; STOCKE OFFSET DS MEM PROG
FF3B  17008E                  LBSR AFFIAD     ; AFFICHE ADRESSE DE STOCKAGE
FF3E  16F9F2                  LBRA REMEMO     ; RETOUR DS FCT MEMOIRE
FF41  3001            EXLBCL  LEAX 1,X 
FF43  3003            EXLBIL  LEAX 3,X        ; BRANCH LONG, X=ADRESSE DE DEPART
FF45  8D11                    BSR CALOFS      ; CALCULE OFFSET
FF47  294C                    BVS RETOU2      ; SI DEPASSE CAPACITE, ERREUR
FF49  81FF                    CMPA #$FF
FF4B  2738                    BEQ PLUCOU      ; BRANCH COURT PEUT ETRE POSSIBLE
FF4D  8100                    CMPA #$00 
FF4F  273A                    BEQ BCOURT      ; BRANCH>0 COURT POSSIBLE
FF51  EDA3            SUITEB  STD ,--Y        ; STOCKE OFFSET DS MEM PROG
FF53  8D77                    BSR AFFIAD      ; AFFICHE ADRESSE
FF55  16F9DB                  LBRA REMEMO     ; RETOUR DS FCT MEMOIRE
FF58                          SPC 2
                      ****** CALCULE L'OFFSET SUR 16 BITS ******
                      **** D CONTIENT L'OFFSET,Y=ADRESSE DEP ***
                      *
                      *
                      *
FF58  1F12            CALOFS  TFR X,Y         ; Y=ADRESSE DE DEPART
FF5A  109FEA                  STY <ADDDEP
FF5D  8D05                    BSR AFFIAR      ; AFFICHAGE ADRESSE ARRIVEE
FF5F  1F10                    TFR X,D         ; D=ADRESSE DEPART
FF61  93EA                    SUBD <ADDDEP    ; D=ARRIVEE-DEPART=OFFSET
FF63  39                      RTS
FF64                          SPC 2
                      ****** AFFICHAGE DE L'ADRESSE D'ARRIVEE ******
                      ** STOCKE DS NEGPOS LE SENS DE L'OFFSET<>0 ***
                      *
                      *
                      *
FF64  CC6F41          AFFIAR  LDD #$6F41      ; AFFICHE AR DS DISBUF
FF67  DDFE                    STD <DISBUF+4
FF69  17F94C                  LBSR BADDR      ; AFFICHE ADRESSE ARRIVEE
FF6C  9FEC                    STX <ADDARR
FF6E  17F8AF                  LBSR GETKEY
FF71  8131                    CMPA #$31       ; TOUCHE GO?
FF73  2703                    BEQ SUIVT       ; OUI, CHARGE ADRESSE
FF75  16FAB2                  LBRA RPOINT 
FF78  17FB10          SUIVT   LBSR CLRDIS     ; ETEINDRE AFFICHAGE
FF7B  86FF                    LDA #$FF
FF7D  9CEA                    CMPX <ADDDEP    ; ARRIVEE<DEPART ?
FF7F  2501                    BLO STOCKA      ; OUI, STOCKE DS NEGPOS
FF81  4C                      INCA
FF82  97E9            STOCKA  STA <NEGPOS     ; NEGPOS=0>0 NEGPOS=FF<0
FF84  39                      RTS
FF85                          SPC 2
                      ** DETERMINE SI LE BRANCH SUR 16BITS PEUT SE FAIRE SUR 8BITS **
                      *
                      *
                      *
FF85  59              PLUCOU  ROLB
FF86  250D                    BCS RETOU2      ; BRANCH COURT POSSIBLE
FF88  56                      RORB
FF89  20C6                    BRA SUITEB      ; CONTINUE CALCUL
FF8B  59              BCOURT  ROLB
FF8C  2407                    BCC RETOU2
FF8E  56                      RORB
FF8F  20C0                    BRA SUITEB
FF91  313E            RETOU1  LEAY -2,Y
FF93  201D                    BRA CLIGNO      ; AFFICHE ERREUR, PUIS RETOUR MEMORY
FF95  313C            RETOU2  LEAY -4,Y
FF97  A6A0                    LDA ,Y+
FF99  8110                    CMPA #$10
FF9B  2713                    BEQ CLIGNE
FF9D  A6A4                    LDA ,Y
FF9F  8116                    CMPA #$16
FFA1  270F                    BEQ CLIGNO
FFA3  8117                    CMPA #$17
FFA5  270B                    BEQ CLIGNO
FFA7  848F                    ANDA #$8F
FFA9  818D                    CMPA #$8D
FFAB  2705                    BEQ CLIGNO
FFAD  16FA7A                  LBRA RPOINT     ; SI PAS BRANCH, RETOUR RESET
FFB0  313F            CLIGNE  LEAY -1,Y
FFB2  8D18            CLIGNO  BSR AFFIAD      ; AFFICHE ADRESSE OU EST L'ERREUR
FFB4  8D09                    BSR ERROR       ; PLACE ERREUR DS DISBUF
FFB6  108E02FF                LDY #$02FF
FFBA  17F8BE          AFCLIG  LBSR DISPRE     ; AFFICHE L'ERREUR
FFBD  2006                    BRA TEMPO       ; TEMPORAIREMENT
FFBF  CC7941          ERROR   LDD #$7941      ; PLACE ER DANS LES 2
FFC2  DDFE                    STD <DISBUF+4   ; DERNIERS DIGITS
FFC4  39                      RTS
FFC5  313F            TEMPO   LEAY -1,Y
FFC7  26F1                    BNE AFCLIG
FFC9  16F967                  LBRA REMEMO     ; RETOUR DANS FCT MEMORY
FFCC                          SPC 2
                      ****** AFFICHE L'ADRESSE DE CHARGEMENT ******
                      ** DE L'OFFSET DANS LES 4 PREMIERS DIGITS ***
                      *
                      *
                      *
FFCC  1F21            AFFIAD  TFR Y,X
FFCE  1F10                    TFR X,D         ; NLLE ADRESSE DE DEP APRES INSTRUC
FFD0  17F930                  LBSR R7SEG 
FFD3  97FB                    STA <DISBUF+1
FFD5  1F10                    TFR X,D
FFD7  17F925                  LBSR L7SEG
FFDA  97FA                    STA <DISBUF
FFDC  1F98                    TFR B,A
FFDE  17F922                  LBSR R7SEG
FFE1  97FD                    STA <DISBUF+3
FFE3  1F98                    TFR B,A
FFE5  17F917                  LBSR L7SEG
FFE8  97FC                    STA <DISBUF+2
FFEA  39                      RTS
FFEB                          SPC 2
                      *************************
                      ****** NMI ROUTINE ******
                      *************************
FFEB                          SPC 1
FFEB  BE07DD          RNMI    LDX >SAVNMI
FFEE  6E84                    JMP ,X  ; EXECUTE ROUTINE NMI
FFF0                          SPC 2
                      *************************************
                      ****** VECTEURS D'INTERRUPTION ******
                      *************************************
FFF0                          SPC 2
FFF2                          ORG $FFF2
FFF2                          SPC 1
FFF2  077A                    FDB RSWI3       ; INTERRUPTION SOFT No 3
FFF4  FA7F                    FDB RSWI2       ; INTERRUPTION SOFT No 2
FFF6  0775                    FDB RFIRQ       ; INTERRUPTION RAPIDE HARD
FFF8  0770                    FDB RIRQ        ; INTERRUPTION NORMALE HARD
FFFA  FAA9                    FDB RSWI        ; INTERRUPTION SOFT No 1
FFFC  FFEB                    FDB RNMI        ; INTERRUPTION NON MASQUABLE HARD
FFFE  FA1C                    FDB RESTAR      ; RESET GENERAL
0000                          SPC 2
                      ***************************************
                      ****** EMPLACEMENT DES REGISTRES ******
                      ***************************************
0000                          SPC 2
07A0                  PILMON  EQU $07A0       ; INITIALISATION PILE MONITEUR
07C0                  PILE    EQU $07C0       ; PILE SYSTEME
077A                  RSWI3   EQU $077A
0775                  RFIRQ   EQU $0775
0770                  RIRQ    EQU $0770
A004                  DISREG  EQU $A004       ; DRA-ACCES CLAVIER ET SEGMENTS
A005                  DISCNT  EQU $A005       ; ORB-COMMANDE CLAVIER ET AFFICHEUR
A006                  SCNREG  EQU $A006       ; PIACRA
A007                  SCNCNT  EQU $A007       ; PIACRB
0000                          SPC 2
                      ************************************************
                      ****** PARAMETRES VARIABLES SITUES EN RAM ******
                      ************************************************
0000                          SPC 2
07DD                          ORG $07DD
07DD                          SPC 1
07DD                  SAVNMI  RMB 2
07DF                  SASWI2  RMB 2
07E1                  PRESER  RMB 1
07E2                  SAUVER  RMB 1
07E3                  PLUSMS  RMB 1
07E4                  SAVPOC  RMB 1
07E5                  PRESEH  RMB 1
07E6                  PRESEL  RMB 1
07E7                  PRELOW  RMB 2
07E9                  NEGPOS  RMB 1
07EA                  ADDDEP  RMB 2
07EC                  ADDARR  RMB 2
07EE                  COMDEC  RMB 1
07EF                  SAVRES  RMB 1
07F0                  SAVCNT  RMB 1
07F1                  SAVREG  RMB 1
07F2                  SADDR1  RMB 2
07F4                  SADDR2  RMB 2
07F6                  SAVB1   RMB 1
07F7                  SAVB2   RMB 1
07F8                  SAVPIL  RMB 2
07FA                  DISBUF  RMB 6
0800                          SPC 2
0800                          END 
